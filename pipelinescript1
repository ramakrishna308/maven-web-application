pipeline
{
agent any
tools {maven "maven3.8.6"}
triggers {
  pollSCM '* * * * *'
}
stages
{
// get code from github
stage("code")
{
steps
{slacknotification("started")
git branch: 'development', credentialsId: '5b202026-119c-4d7e-b0b8-802bba8af087', url: 'https://github.com/ramakrishna308/maven-web-application.git'}
}
// build the code
stage("build")
{
steps
{
sh "mvn clean package"
}
}
//excute the sonarqube report
stage("sonarqube report")
{
steps
{
sh ("mvn sonar:sonar")
}
}
//nexus artifact repository
stage("artifact repository")
{
steps
{
sh "mvn deploy"
}
}
//deploy to tomcat server
stage("tomcat") 
{
steps
{
sshagent(['9eae0132-016f-4304-be5b-e282cf71a7a9'])
{
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@3.111.57.49:/opt/apache-tomcat-9.0.64/webapps"
}
}
}
}
post {
  success {slacknotification (currentBuild.result)
 
  }
  failure {slacknotification (currentBuild.result)
  
  }
}
}
def slacknotification(String buildStatus = 'STARTED')
{
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'



 // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"



 // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }



 // Send notifications
  slackSend (color: colorCode, message: summary)
}
